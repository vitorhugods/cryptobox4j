name: CI/CD

env:
  CRYPTOBOX_IMAGE: wirebot/cryptobox
  RUNTIME_IMAGE: wirebot/runtime

on:
  workflow_dispatch:
  pull_request:
  schedule:
    # At 01:00 on Saturday - build and publish images each saturday at 1:00
    - cron:  '0 1 * * 6'
  push:
    branches:
      - master

jobs:
  docker-builds:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          # checkout whole history with tags
          fetch-depth: 0

        # do not push if this pipeline runs on PR
      - name: Determine Docker Push
        run: |
          echo "PUSH=${{ github.event.pull_request == null }}" >> $GITHUB_ENV

      # determine latest tag to use for docker deployment
      - name: Get Latest Tag
        id: tags
        uses: WyriHaximus/github-action-get-previous-tag@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ env.PUSH == 'true' }} # no need to login if this is PR
        with:
          username: wirebot
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Tag Crypto Box Image
        run: |
          docker build -f dockerfiles/Dockerfile.cryptobox \
            -t ${{ env.CRYPTOBOX_IMAGE }}:latest \
            -t ${{ env.CRYPTOBOX_IMAGE }}:${{ steps.tags.outputs.tag }} \
            .

      - name: Push Cryptobox Image
        if: ${{ env.PUSH == 'true' }} # no need to push if PR
        run: |
          docker push ${{ env.CRYPTOBOX_IMAGE }}:latest
          docker push ${{ env.CRYPTOBOX_IMAGE }}:${{ steps.tags.outputs.tag }}

      - name: Build and Tag Bots Runtime
        run: |
          docker build -f dockerfiles/Dockerfile.runtime \
            -t ${{ env.RUNTIME_IMAGE }}:latest \
            -t ${{ env.RUNTIME_IMAGE }}:${{ steps.tags.outputs.tag }} \
            .

      - name: Push Runtime Image
        if: ${{ env.PUSH == 'true' }} # no need to push if PR
        run: |
          docker push ${{ env.RUNTIME_IMAGE }}:latest
          docker push ${{ env.RUNTIME_IMAGE }}:${{ steps.tags.outputs.tag }}

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Docker CI pipeline
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_CI }}
        # Send message only if previous step failed
        if: failure()
